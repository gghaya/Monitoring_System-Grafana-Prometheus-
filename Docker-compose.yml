version: '3'

networks:
  internal_net:
    driver: bridge
  application_nat:
    external: true

services:
  # setup:
  #   container_name : setup
  #   build:
  #     context : setup
  #     dockerfile: Dockerfile
  #   volumes:
  #     - "certs:/etc/certs"
  prometheus:
    # depends_on: 
    #   - setup
    container_name : prometheus_c
    build :
      context : prometheus
      dockerfile: Dockerfile
    restart: always
    ports:
      - 9090:9090
    volumes:
      - "prometheus_data:/prometheus/"
      - "certs:/etc/prometheus/certs"
    env_file:
      - .env
    networks:
        - internal_net
  grafana:
    container_name : grafana
    build :
      context: grafana
      dockerfile: Dockerfile
    restart: always
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    ports:
      - 5000:3000
    volumes:
      - "grafana_data:/var/lib/grafana"
    env_file:
      - .env
    networks:
        - internal_net
  nginx_exporter:
      container_name: nginx_exporter
      build:
        context: exporters
        dockerfile: Dockerfile.nginxporter
      networks:
        - internal_net
        - application_nat
      ports:
        - 9913:9913
      environment:
        - NGINX_STATUS='http://nginx/status/format/json'
  alert_manager:
      container_name: alert_manager
      build:
        context: alertmanager
        dockerfile: Dockerfile
      networks:
        - internal_net
      ports:
        - 9093:9093


  # node_exporter:
  #   image: quay.io/prometheus/node-exporter:latest
  #   container_name: node_exporter
  #   command:
  #     - '--path.rootfs=/host'
  #   network_mode: host
  #   pid: host
  #   restart: unless-stopped
  #   ports:
  #     - 9100:9100
  #   volumes:
  #     - '/:/host:ro'
volumes:
  prometheus_data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/Users/${USER}/Desktop/prometheus_data/'
  grafana_data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/Users/${USER}/Desktop/grafana_data/'
  certs:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '${PWD}/certs/'